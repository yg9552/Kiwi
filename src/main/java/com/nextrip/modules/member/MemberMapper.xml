<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nextrip.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.nextrip.modules.member.Member"></resultMap>
	
	<sql id="selectCommon">
		FROM member
		WHERE 1=1
			<!-- <if test="shdelNy != 9">AND a.delNy = #{shdelNy}</if>
			<choose>
				<when test="shgender ==1">AND gender = 101</when>
				<when test="shgender ==2">AND gender = 102</when>
			</choose>
			<choose>
				<when test="shOption ==1">AND nickname LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==2">AND email LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==3">AND id LIKE CONCAT('%',#{shValue},'%')</when>
			</choose> -->
	</sql>
	
	<select id="selectMemberListCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectMemberList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			SELECT
				memberSeq
				,id
				,nickname
				,name
				,dob
				,phoneNum
				,email
				,adminNy
				,delNy
				,regDateTime
				,modDateTime
			<include refid="selectCommon"></include>
			order by memberSeq DESC
			<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectOneMember" resultMap="resultMapObj">
		SELECT
			memberSeq
			,id
			,nickname
			,name
			,dob
			,phoneNum
			,email
			,adminNy
			,delNy
			,regDateTime
			,modDateTime
		FROM member
		WHERE 1=1
			AND memberSeq=#{memberSeq}
	</select>
	
	<update id="memberUpdt">
		UPDATE member
		SET
			name = #{name}
			,nickname = #{nickname}
			,dob = #{dob}
			,phoneNum = #{phoneNum}
			,email = #{email}
		WHERE 1=1
			AND memberSeq=#{memberSeq}
	</update>
	
	<update id="memberVele">
		UPDATE member
		SET
			delNy = 1
		WHERE 1=1
			AND memberSeq=#{memberSeq}
	</update>
	
	<!-- 비밀번호 변경 S -->
	<select id="passwordCheck" resultType="Integer">
		SELECT
			count(*)
		FROM member
		WHERE 1=1
			AND memberSeq=#{memberSeq}
			AND password=#{password}
	</select>
	
	<update id="passwordUpdt">
		UPDATE member
		SET
			password=#{newPass}
		WHERE 1=1
			AND memberSeq=#{memberSeq}
			AND delNy=0
	</update>
	<!-- 비밀번호 변경 E -->
	
	<select id="getIdList" resultMap="resultMapObj">
		SELECT
			memberSeq
			,nickname
			,id
			,delNy
		FROM member
		WHERE 1=1
	</select>
	<!-- 로그인 S -->
	<select id="checkId" resultMap="resultMapObj">
		SELECT
			memberSeq
			,id
		FROM member
		WHERE 1=1
			AND id=#{id}
			AND delNy=0
	</select>
	
	<select id="snsLoginCheck" resultMap="resultMapObj">
		SELECT
			*
		FROM member a
		WHERE 1=1
		AND a.email = #{email}
		AND a.nickname = #{nickname}
	</select>
	
	<select id="login" resultMap="resultMapObj">
		SELECT
			memberSeq
			,id
			,nickname
		FROM member
		WHERE 1=1
			AND id=#{id}
			AND password = #{password}
			AND delNy = 0
	</select>
	
	<insert id="kakaoInst">
		INSERT INTO member(
			name
			,nickname
			,email
			,delNy
			,adminNy
			,token
			,dob
			,phoneNum
			)
		VALUES(
			#{name }
			,#{nickname }
			,#{email }
			,0
			,0
			,#{token }
			,#{dob }
			,#{phoneNum }
			)
		<selectKey resultType="String" keyProperty="memberSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectId" resultMap="resultMapObj">
		SELECT
			id
		FROM member
		WHERE 1=1
			AND email=#{email}
			AND delNy =0
	</select>
	
	<select id="selectSeqByIdEmail" resultType="Integer">
		SELECT
			count(*)
		FROM member
		WHERE 1=1
			AND id=#{id}
			AND email=#{email}
			AND delNy=0
	</select>
	
	<update id="passwordRefresh">
		UPDATE member
		SET
			password=#{newPass}
		WHERE 1=1
			AND id=#{id}
			AND email=#{email}
			AND delNy=0
	</update>
	<!-- 로그인 E -->
	
	<!-- 회원가입 S -->
	<select id="idOverlapCheck" resultType="Integer">
		SELECT
			COUNT(*)
		FROM member
		WHERE 1=1
			AND id=#{id}
	</select>
	
	<select id="emailOverlapCheck" resultType="Integer">
		SELECT
			COUNT(*)
		FROM member
		WHERE 1=1
			AND email=#{email}
	</select>
	
	<insert id="userReg">
		INSERT INTO member(
			id
			,password
			,nickname
			,name
			,dob
			,phoneNum
			,email
			,adminNy
			,delNy
		)
		VALUES(
			#{id}
			,#{password}
			,#{nickname}
			,#{name}
			,#{dob}
			,#{phoneNum}
			,#{email}
			,0
			,0
		)
		<selectKey resultType="String" keyProperty="memberSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<!-- 회원가입 E -->
	
	<!-- 휘재 s -->
	<select id="mostPostRegion" resultMap="resultMapObj">
	select
		a.region
	    ,(
			select
	        count(b.nxPostSeq)
	        from nxPost b
	        where 1=1
	        and b.region = a.region
	        ) as postCount
	from nxPost a
	where 1=1
	group by region
	limit 3
	</select>
	
	<!-- 휘재 e -->
	
</mapper>	