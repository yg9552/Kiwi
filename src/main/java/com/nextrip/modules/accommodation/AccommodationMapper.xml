<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nextrip.modules.accommodation.AccommodationMapper">

    <resultMap id="resultMapObj" type="com.nextrip.modules.accommodation.Accommodation"></resultMap>
	
	<sql id="selectCommon">
	FROM nxAccommodation a
	WHERE 1=1
	<!-- <if test="shDelNy != null and !shDelNy.equals('')">AND DelNy = #{shDelNy}</if> -->
		<choose>
			<when test="shOption == 1">AND a.region = #{shValue}</when>
			<otherwise></otherwise>
		</choose>
	</sql>
	
	<select id="selectList" resultMap="resultMapObj">
		<!-- <include refid="Base.selectListUpperForMysql" /> -->
			SELECT
			    a.nxAccommodationSeq
			    ,a.region
			    ,a.hotelType
			    ,a.hotelName
			    ,a.hotelIntroduce
			    ,a.addressZip
			    ,a.address
			    ,a.adressDetail
			    ,a.lng
			    ,a.lat
			    ,a.checkin
			    ,a.checkout
			    ,a.delNy
			    ,a.regDateTime
			    ,a.modDateTime
	    	<include refid="selectCommon" />
	    	ORDER BY a.nxAccommodationSeq ASC
	    	<!-- <include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" /> -->
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
		    a.nxAccommodationSeq
		    ,a.region
		    ,a.hotelType
		    ,a.hotelName
		    ,a.hotelIntroduce
		    ,a.addressZip
		    ,a.address
		    ,a.adressDetail
		    ,a.lng
		    ,a.lat
		    ,a.checkin
		    ,a.checkout
		    ,a.delNy
		    ,a.regDateTime
		    ,a.modDateTime
	    FROM nxAccommodation a
	    WHERE 1=1
	    AND a.nxAccommodationSeq = #{nxAccommodationSeq}
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<insert id="insert">
		INSERT INTO nxAccommodation(
			region
			,hotelType
			,hotelName
			,hotelIntroduce
			,addressZip
			,address
			,adressDetail
			,lng
			,lat
			,checkin
			,checkout
			,delNy
			)
		VALUES(
			#{region }
			,#{hotelType }
			,#{hotelName }
			,#{hotelIntroduce }
			,#{addressZip }
			,#{address }
			,#{adressDetail }
			,#{lng }
			,#{lat }
			,#{checkin }
			,#{checkout }
			,0
			)
		<selectKey resultType="String" keyProperty="nxAccommodationSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectListUploaded" resultMap="resultMapObj">
		SELECT 
			seq
			,type
			,defaultNy
			,sort
			,path
			,originalName
			,uuidName
			,pseq
		FROM kiwi.nxAccommodationUploaded
		WHERE 1=1
			AND delNy = 0
			<if test="nxAccommodationSeq != null and !nxAccommodationSeq.equals('')">AND pseq = #{nxAccommodationSeq}</if>
		ORDER BY
			type, sort
	</select>
	
	<!-- PurchaseHistory S -->
	<select id="selectListPurchaseHistory" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			SELECT 
			    a.nxPurchaseHistorySeq
			    ,a.nxAccommodationSeq
			    ,a.memberSeq
			    ,a.nxRoomSeq
			    ,a.reservationName
			    ,a.reservationPhoneNum
			    ,a.reservationStatus
			    ,a.paymentMethod
			    ,a.checkInDate
			    ,a.checkOutDate
			    ,a.pay
			    ,a.delNy
			    ,a.regDateTime
			    ,a.modDateTime
			    ,a.personnel
			    ,TIMESTAMPDIFF(DAY, a.checkInDate, a.checkOutDate) as dateGap
			FROM nxPurchaseHistory a
			WHERE 1=1
	    	ORDER BY a.nxPurchaseHistorySeq DESC
	    	<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectOnePurchaseHistory" resultMap="resultMapObj">
		SELECT 
		    a.nxPurchaseHistorySeq
		    ,a.nxAccommodationSeq
		    ,a.memberSeq
		    ,a.nxRoomSeq
		    ,a.reservationName
		    ,a.reservationPhoneNum
		    ,a.reservationStatus
		    ,a.paymentMethod
		    ,a.checkInDate
		    ,a.checkOutDate
		    ,a.pay
		    ,a.delNy
		    ,a.regDateTime
		    ,a.modDateTime
		    ,a.personnel
		    ,TIMESTAMPDIFF(DAY, a.checkInDate, a.checkOutDate) as dateGap
	    FROM nxPurchaseHistory a
	    WHERE 1=1
	    AND a.nxPurchaseHistorySeq = #{nxPurchaseHistorySeq}
	</select>
	
	<select id="selectOneCountPurchaseHistory" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<insert id="insertPurchaseHistory">
		INSERT INTO nxPurchaseHistory(
			memberSeq
			,nxAccommodationSeq
			,nxRoomSeq
			,reservationStatus
			,checkInDate
			,checkOutDate
			,pay
			,delNy
			,personnel
			)
		VALUES(
			#{memberSeq }
			,#{nxAccommodationSeq }
			,#{nxRoomSeq }
			,1
			,#{checkInDate }
			,#{checkOutDate }
			,#{pay }
			,0
			,#{personnel }
			)
		<selectKey resultType="String" keyProperty="nxPurchaseHistorySeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="updatePurchaseHistory">
		UPDATE nxPurchaseHistory
		SET
			reservationName = #{reservationName }
			,reservationPhoneNum = #{reservationPhoneNum }
			,reservationStatus = 2
			,pay = #{pay }
			,paymentMethod = #{paymentMethod }
		WHERE 
			nxPurchaseHistorySeq = #{nxPurchaseHistorySeq}
	</update>
	<!-- PurchaseHistory E -->
	
	<!-- Room S -->
	<select id="selectListRoom" resultMap="resultMapObj">
		<!-- <include refid="Base.selectListUpperForMysql" /> -->
			SELECT
			    a.nxRoomSeq
			    ,a.nxAccommodationSeq
			    ,a.roomName
			    ,a.roomType
			    ,a.price
			    ,a.delNy
	    	FROM nxRoom a
	    	WHERE 1=1
	    	<if test="nxAccommodationSeq != null and !nxAccommodationSeq.equals('')">AND a.nxAccommodationSeq = #{nxAccommodationSeq}</if>
	    	ORDER BY a.nxRoomSeq ASC
	    	<!-- <include refid="Base.orderByLimitForMysql" /> -->
		<!-- <include refid="Base.selectListLowerForMysql" /> -->
	</select>
	
	<select id="selectOneRoom" resultMap="resultMapObj">
		SELECT
		    a.nxRoomSeq
		    ,a.nxAccommodationSeq
		    ,a.roomName
		    ,a.roomType
		    ,a.price
		    ,a.delNy
		FROM nxRoom a
		WEHRE 1=1
		AND a.nxRoomSeq = #{nxRoomSeq}
	</select>
	
	<select id="selectOneCountRoom" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<insert id="insertRoom">
		INSERT INTO nxRoom(
			nxRoomSeq
			,nxAccommodationSeq
			,roomName
			,roomType
			,price
			,delNy
			)
		VALUES(
			#{nxRoomSeq }
			,#{nxAccommodationSeq }
			,#{roomName }
			,#{roomType }
			,#{price }
			,0
			)
		<selectKey resultType="String" keyProperty="nxRoomSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectRoomPrice" resultMap="resultMapObj">
		SELECT
			a.price
		FROM nxRoom a
		WHERE 1=1
		AND a.nxRoomSeq = #{nxRoomSeq}
	</select>
	<!-- Room E -->
	
	<!-- Review S -->
	<select id="selectListReview" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			SELECT
			    a.nxAccommodationReviewSeq
			    ,a.memberSeq
			    ,a.nxAccommodationSeq
			    ,a.starRate
			    ,a.generalReview
			    ,a.goodPointReview
			    ,a.badPointReview
			    ,a.regDateTime
			    ,a.modDateTime
			    ,a.delNy
			    ,b.nickname
			FROM nxAccommodationReview a
			left join member b on a.memberSeq = b.memberSeq
			WHERE 1=1
			<if test="memberSeq != null and !memberSeq.equals('')">AND a.memberSeq = #{memberSeq}</if>
			ORDER BY nxAccommodationReviewSeq DESC
			<include refid="Base.orderByLimitForMysql" />
	    <include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectOneReview">
		SELECT
		    nxAccommodationReviewSeq
		    ,memberSeq
		    ,nxAccommodationSeq
		    ,starRate
		    ,generalReview
		    ,goodPointReview
		    ,badPointReview
		    ,regDateTime
		    ,modDateTime
		    ,delNy
		FROM nxAccommodationReview
		WHERE 1=1
		AND nxAccommodationReviewSeq = #{nxAccommodationReviewSeq}
	</select>
	
	<select id="selectOneCountReview" resultType="Integer">
		SELECT COUNT(*)
		FROM nxAccommodationReview
		WHERE 1=1
	</select>
	
	<insert id="insertReview">
		INSERT INTO nxAccommodationReview(
			,memberSeq
			,nxAccommodationSeq
			,starRate
			,generalReview
			,goodPointReview
			,badPointReview
			,regDateTime
			,modDateTime
			delNy
			)
		VALUES(
			{memberSeq }
			,{nxAccommodationSeq }
			,{starRate }
			,{generalReview }
			,{goodPointReview }
			,{badPointReview }
			,0
			)
		<selectKey resultType="String" keyProperty="nxAccommodationReviewSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>			
	</insert>
	
	<!-- Review E -->
	
	<!-- 찬구 S -->
	<select id="countUserPurchaseHistory" resultType="Integer">
		SELECT
			COUNT(*)
		FROM nxPurchaseHistory a
		WHERE 1=1
			AND memberSeq = #{memberSeq}
	</select>
	
	<select id="selectUserPurchaseHistoryList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			SELECT 
			    a.nxPurchaseHistorySeq
			    ,a.nxAccommodationSeq
			    ,a.memberSeq
			    ,a.nxRoomSeq
			    ,(SELECT a.hotelName FROM nxAccommodation a inner join nxRoom b on b.nxAccommodationSeq = a.nxAccommodationSeq WHERE b.nxRoomSeq =a.nxRoomSeq) as hotelName
			    ,(SELECT a.region FROM nxAccommodation a inner join nxRoom b on b.nxAccommodationSeq = a.nxAccommodationSeq WHERE b.nxRoomSeq =a.nxRoomSeq) as region
			    ,a.reservationName
			    ,a.reservationPhoneNum
			    ,a.reservationStatus
			    ,a.paymentMethod
			    ,a.checkInDate
			    ,a.checkOutDate
			    ,a.pay
			    ,a.delNy
			    ,a.regDateTime
			    ,a.modDateTime
			    ,a.personnel
			    ,TIMESTAMPDIFF(DAY, a.checkInDate, a.checkOutDate) as dateGap
			FROM nxPurchaseHistory a
			WHERE 1=1
				AND memberSeq = #{memberSeq}
	    	ORDER BY a.nxPurchaseHistorySeq DESC
	    	<include refid="Base.orderByLimitForMysql" />
		) aa
		limit 3 offset #{startRnumForMysql}
	</select>
	
	<select id="getOnePurchaseHistory" resultMap="resultMapObj">
		SELECT 
			a.nxPurchaseHistorySeq
		    ,a.memberSeq
			,a.nxAccommodationSeq
		    ,a.modDateTime
		    ,a.paymentMethod
		    ,a.pay
		    ,b.hotelName
		    ,b.address
		    ,b.adressDetail
		    ,(SELECT roomName FROM nxRoom c WHERE a.nxRoomSeq = c.nxRoomSeq) as roomName
		    ,a.personnel
		    ,a.checkInDate
			,a.checkOutDate
		    ,TIMESTAMPDIFF(DAY, a.checkInDate, a.checkOutDate) as dateGap
		    ,a.reservationStatus
		    ,a.reservationName
			,a.reservationPhoneNum
		    ,b.checkin
		    ,b.checkout
			,(SELECT a.region FROM nxAccommodation a inner join nxRoom b on b.nxAccommodationSeq = a.nxAccommodationSeq WHERE b.nxRoomSeq =a.nxRoomSeq) as region
			,a.nxRoomSeq
			,a.delNy
		FROM nxPurchaseHistory a
			inner join nxAccommodation b on b.nxAccommodationSeq = a.nxAccommodationSeq
		WHERE 1=1
	    AND a.nxPurchaseHistorySeq = #{nxPurchaseHistorySeq}
	</select>
	
	<update id="CancelPurchaseHistory">
		UPDATE nxPurchaseHistory
		SET
			reservationStatus = 4
		WHERE
			nxPurchaseHistorySeq = #{nxPurchaseHistorySeq}
	</update>
	
	<!-- 찬구 E -->
</mapper>	